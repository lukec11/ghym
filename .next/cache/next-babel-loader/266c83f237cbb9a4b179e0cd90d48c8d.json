{"ast":null,"code":"var _jsxFileName = \"/Users/neelredkar/Documents/Git/ghym/components/Nav.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { Flex, Box, Text, Button, Link } from \"rebass\";\nimport { useColorMode } from 'theme-ui';\n\nconst ColorButton = (_ref) => {\n  let {\n    mode\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"mode\"]);\n\n  return __jsx(Box, _extends({\n    as: \"button\"\n  }, props, {\n    title: \"Cycle Color Mode\",\n    sx: {\n      display: 'inline-block',\n      appearance: 'none',\n      bg: 'transparent',\n      color: 'inherit',\n      p: 1,\n      m: 2,\n      border: 0,\n      borderRadius: 9999,\n      lineHeight: 0,\n      ':hover, :focus': {\n        color: 'primary',\n        boxShadow: '0 0 0 3px',\n        outline: 'none'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }), __jsx(\"svg\", {\n    viewBox: \"0 0 32 32\",\n    width: \"24\",\n    height: \"24\",\n    fill: \"currentcolor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"circle\", {\n    cx: \"16\",\n    cy: \"16\",\n    r: \"14\",\n    fill: \"none\",\n    stroke: \"currentcolor\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), __jsx(\"path\", {\n    d: \"M 16 0 A 16 16 0 0 0 16 32 z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })));\n};\n\nexport default (props => {\n  const [colorMode, setColorMode] = useColorMode();\n  return __jsx(Flex, {\n    px: 2,\n    color: \"white\",\n    bg: \"black\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Link, {\n    p: 2,\n    variant: \"nav\",\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Home\"), __jsx(Box, {\n    mx: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(Link, {\n    mx: \"10px\",\n    variant: \"nav\",\n    href: \"/help\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Help!\"), __jsx(ColorButton, {\n    onClick: e => {\n      setColorMode(colorMode === 'default' ? 'dark' : 'default');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, colorMode === 'default' ? 'Dark' : 'Light'));\n});","map":{"version":3,"sources":["/Users/neelredkar/Documents/Git/ghym/components/Nav.js"],"names":["React","Flex","Box","Text","Button","Link","useColorMode","ColorButton","mode","props","display","appearance","bg","color","p","m","border","borderRadius","lineHeight","boxShadow","outline","colorMode","setColorMode","e"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,IAAlC,QAA8C,QAA9C;AACA,SAASC,YAAT,QAA6B,UAA7B;;AACA,MAAMC,WAAW,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,MAAYC,KAAZ;;AAAA,SAChB,MAAC,GAAD;AACE,IAAA,EAAE,EAAC;AADL,KAEMA,KAFN;AAGE,IAAA,KAAK,EAAC,kBAHR;AAIE,IAAA,EAAE,EAAE;AACFC,MAAAA,OAAO,EAAE,cADP;AAEFC,MAAAA,UAAU,EAAE,MAFV;AAGFC,MAAAA,EAAE,EAAE,aAHF;AAIFC,MAAAA,KAAK,EAAE,SAJL;AAKFC,MAAAA,CAAC,EAAE,CALD;AAMFC,MAAAA,CAAC,EAAE,CAND;AAOFC,MAAAA,MAAM,EAAE,CAPN;AAQFC,MAAAA,YAAY,EAAE,IARZ;AASFC,MAAAA,UAAU,EAAE,CATV;AAUF,wBAAkB;AAChBL,QAAAA,KAAK,EAAE,SADS;AAEhBM,QAAAA,SAAS,EAAE,WAFK;AAGhBC,QAAAA,OAAO,EAAE;AAHO;AAVhB,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAqBE;AAAK,IAAA,OAAO,EAAC,WAAb;AAAyB,IAAA,KAAK,EAAC,IAA/B;AAAoC,IAAA,MAAM,EAAC,IAA3C;AAAgD,IAAA,IAAI,EAAC,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAC,IADL;AAEE,IAAA,EAAE,EAAC,IAFL;AAGE,IAAA,CAAC,EAAC,IAHJ;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,MAAM,EAAC,cALT;AAME,IAAA,WAAW,EAAC,GANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAM,IAAA,CAAC,EAAC,8BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CArBF,CADgB;AAAA,CAApB;;AAmCA,gBAAeX,KAAK,IAAI;AACpB,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BhB,YAAY,EAA9C;AACA,SACI,MAAC,IAAD;AACI,IAAA,EAAE,EAAE,CADR;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,EAAE,EAAC,OAHP;AAII,IAAA,UAAU,EAAC,QAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,IAAD;AAAM,IAAA,CAAC,EAAE,CAAT;AAAY,IAAA,OAAO,EAAC,KAApB;AAA0B,IAAA,IAAI,EAAC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAQI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAgB,IAAA,OAAO,EAAC,KAAxB;AAA8B,IAAA,IAAI,EAAC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ,EAYI,MAAC,WAAD;AACI,IAAA,OAAO,EAAEiB,CAAC,IAAI;AACVD,MAAAA,YAAY,CAACD,SAAS,KAAK,SAAd,GAA0B,MAA1B,GAAmC,SAApC,CAAZ;AACH,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKA,SAAS,KAAK,SAAd,GAA0B,MAA1B,GAAmC,OAJxC,CAZJ,CADJ;AAqBH,CAvBD","sourcesContent":["import React from \"react\"\nimport { Flex, Box, Text, Button, Link } from \"rebass\"\nimport { useColorMode } from 'theme-ui'\nconst ColorButton = ({ mode, ...props }) => (\n    <Box\n      as=\"button\"\n      {...props}\n      title=\"Cycle Color Mode\"\n      sx={{\n        display: 'inline-block',\n        appearance: 'none',\n        bg: 'transparent',\n        color: 'inherit',\n        p: 1,\n        m: 2,\n        border: 0,\n        borderRadius: 9999,\n        lineHeight: 0,\n        ':hover, :focus': {\n          color: 'primary',\n          boxShadow: '0 0 0 3px',\n          outline: 'none'\n        }\n      }}\n    >\n      <svg viewBox=\"0 0 32 32\" width=\"24\" height=\"24\" fill=\"currentcolor\">\n        <circle\n          cx=\"16\"\n          cy=\"16\"\n          r=\"14\"\n          fill=\"none\"\n          stroke=\"currentcolor\"\n          strokeWidth=\"4\"\n        />\n        <path d=\"M 16 0 A 16 16 0 0 0 16 32 z\" />\n      </svg>\n    </Box>\n  )\nexport default props => {\n    const [colorMode, setColorMode] = useColorMode()\n    return (\n        <Flex\n            px={2}\n            color='white'\n            bg='black'\n            alignItems='center'>\n            <Link p={2} variant='nav' href='/'>\n                Home\n            </Link>\n            <Box mx='auto' />\n            <Link mx=\"10px\" variant='nav' href='/help'>\n                Help!\n            </Link>\n            <ColorButton\n                onClick={e => {\n                    setColorMode(colorMode === 'default' ? 'dark' : 'default')\n                }}>\n                {colorMode === 'default' ? 'Dark' : 'Light'}\n            </ColorButton>\n        </Flex>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}