{"version":3,"file":"static/webpack/static/development/pages/run.js.09c59773f921b2959050.hot-update.js","sources":["webpack:///./pages/run.js"],"sourcesContent":["import React from \"react\";\nimport {Box, Flex, Text, Heading, Button} from \"rebass\";\nimport Link from \"next/link\"\nimport axios from \"axios\"\nimport io from \"socket.io-client\"\nimport {\n    Label,\n    Input,\n    Select,\n    Textarea,\n  } from '@rebass/forms'\n  import Dropzone from 'react-dropzone'\nexport default class Run extends React.Component {\n    state = {\n        connect:(<Text fontSize=\"3\" m=\"10px\" color=\"red\">Disconnected ðŸ’€</Text>),\n        id:\"\",\n        console:\"\"\n    }\n    render () {\n        return (\n            <Flex flexDirection=\"column\" textAlign=\"center\">\n                {this.state.connect}\n                <Heading fontSize={[5,6]}>Create A Job!</Heading>\n                <Flex action=\"javascript:void(0);\" flexDirection=\"column\" width={[\"80vw\",\"75vw\"]} m=\"auto\" as=\"form\" id=\"form\">\n                    <Label for=\"name\">Name</Label>\n                    <Input id=\"name\" name=\"name\" css={{borderRadius:\"3px\"}} placeholder=\"My Job 123\"/>\n                    <Label for=\"ram\">Memory</Label>\n                    <Select id=\"ram\" name=\"ram\">\n                        <option value=\"1\">1 GB</option>\n                        <option value=\"2\">2 GB</option>\n                        <option value=\"3\">3 GB</option>\n                        <option value=\"4\">4 GB</option>\n                        <option value=\"5\">5 GB</option>\n                        <option value=\"6\">6 GB</option>\n                        <option value=\"7\">7 GB</option>\n                        <option value=\"8\">8 GB</option>\n                        <option value=\"9\">9 GB</option>\n                    </Select>\n                    <Label for=\"code\">Code</Label>\n                    <Textarea css={{borderRadius:\"3px\"}} id=\"code\" name=\"code\" placeholder={`print(\"Hello World!\")`}>\n                        \n                    </Textarea>\n                    <Dropzone accept=\".py\" onDrop={acceptedFiles => {\n                        acceptedFiles.forEach((file) => {\n                            const reader = new FileReader()\n                            reader.readAsBinaryString(file)\n                            reader.onabort = () => console.log('file reading was aborted')\n                            reader.onerror = () => console.log('file reading has failed')\n                            reader.onload = () => {\n                              const binaryStr = reader.result\n                              document.getElementById(\"code\").value = binaryStr\n                            }\n                          })\n                    }}>\n                    {({getRootProps, getInputProps}) => (\n                        <section>\n                        <div style={{height:\"100px\", marginTop:\"20px\", display:\"flex\",outlineColor:\"grey\",outlineWidth:\"3px\",outlineStyle:\"dashed\"}} {...getRootProps()}>\n                            <input id=\"file\" {...getInputProps()} />\n                            <p style={{margin:\"auto\"}}>Drag 'n' drop your python files here, or click to select files</p>\n                        </div>\n                        </section>\n                    )}\n                    </Dropzone>\n                    <Button onClick={() => {\n                        axios.post(\"https://ghym-server.glitch.me/queue_job\",{is_running:false,name:document.getElementById(\"name\").value,id:this.state.id,ram:document.getElementById(\"ram\").value,code:document.getElementById(\"code\").value})\n                        document.getElementById('form').reset();\n                        }} m=\"10px\" sx={{\":hover\":{cursor:\"pointer\"}}}>Send Away!</Button>\n                </Flex>\n                <Textarea sx={{m:\"auto\", bg:\"dark\",width:[\"80vw\",\"50vw\"]}}  id=\"console\" placeholder={`Your console!`} readOnly>\n                </Textarea>\n            </Flex>\n        )\n    }\n    componentDidMount () {\n        var socket = io(\"https://ghym-server.glitch.me/\")\n        socket.on(\"connect\", () => {\n            this.setState({connect:(<Text m=\"10px\" fontSize=\"3\" color=\"green\">Connected ðŸ”Œ</Text>),id:socket.id})\n        })\n        socket.on(\"done\",d => {\n            document.getElementById(\"console\").value = `${d.name} has finished with the output:\\n ${String(d.out).replace(/,/g,\"\\n\")}`\n        })\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AACA;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;AArEA;AACA;;;;;A","sourceRoot":""}